"""
Django settings for bookstore_project project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os # new for template path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-f_1!t&g_w%$cj9)7xbg^*-z4r*6&8lw7hokp$tgh+egzf5hg#f'
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = int(os.environ.get('DEBUG', default=0))

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party
    'crispy_forms', # new
    'crispy_bootstrap4', # new! Note: django-crispy-forms 2.0 the template packs are now in separate packages.
    # 'uni-form', just for test but fail
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    'django.contrib.sites', # Enabling the sites framwork

    # Local
    'users.apps.UsersConfig', # new
    'pages.apps.PagesConfig',
    'shoes.apps.ShoesConfig',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bookstore_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # new
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            # 'loaders': [
            #     'django.template.loaders.filesystem.Loader',
            #     'django.template.loaders.app_directories.Loader',
            # ],
        },
    },
]

WSGI_APPLICATION = 'bookstore_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'books1',
        'USER': 'root',
        'PASSWORD': '30102001',
        'HOST':'db',
        'PORT':'3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
# set statics on top-level static directory
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),] #new
# STATIC_ROOT help web run faster
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # new

# set STATICFILES_FINDERS ---> tell Django how to look static file dir
STATICFILES_FINDERS = [
    # looks for static files in dir specified by 'STATICFILES_DIRS'. BY DEFAULT, 
    # it serach in dic list in STATICFILES_DIRS and each app's 'static' sub
    "django.contrib.staticfiles.finders.FileSystemFinder",  

    # this finder looks for static files in each installed app, In create django
    #  app can include a'static' dir to store static file specific that app
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
]
# Default primary key field type

# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'users.CustomUser' # new 

# # after successfully logs in using DjagAuth, ex submit login form --> then redirect to this variable
# LOGIN_REDIRECT_URL = 'home'

# # for log out ????
# LOGOUT_REDIRECT_URL = 'home' # new

# why use this redirec instead above
# django-allauth config
LOGIN_REDIRECT_URL = 'home'
ACCOUNT_LOGOUT_REDIRECT = 'home' # this'll overide LOGOUT_REDIRECT_URL above

# set default template pack
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# django-allauth config
SITE_ID = 1 

ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True # On the db level, one user must have one email

AUTHENTICATION_BACKENDS = (
    # which is used Django authenticate a user
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend', # new
)

# Overide email.backend default is smtp
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' #new
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # new
# Host for sending e-mail.
EMAIL_HOST = 'smtp.gmail.com'
# Port for sending e-mail.
EMAIL_PORT = 587
# Disable TLS since it's not needed for local testing
EMAIL_USE_TLS = True  
# Optional SMTP authentication information for EMAIL_HOST.
EMAIL_HOST_USER = 'anhtuan11b32001@gmail.com'
EMAIL_HOST_PASSWORD = 'cala ctfd vsvc njco'
# congig where email from
DEFAULT_FROM_EMAIL = 'bangiay@gmail.com'

ACCOUNT_SESSION_REMEMBER = True # alway remember

# change password in one-liner
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False